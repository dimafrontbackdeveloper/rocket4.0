// упрощенное написание медиа запросов
@mixin breakpoint($bp) {
  @media screen and (max-width: $bp) {
    @content;
  }
}

// Адаптивные свойства
$maxWidth: 1440;
$maxWidthContainer: 1248;

@mixin adaptiv-value($property, $startSize, $minSize, $type) {
  $addSize: $startSize - $minSize;

  @if $type==1 {
    // Только если меньше контейнера
    #{$property}: $startSize + px;

    @media (max-width: #{$maxWidthContainer + px}) {
      #{$property}: calc(
        #{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidthContainer - 320})
      );
    }
  } @else if $type==2 {
    // Только если больше контейнера
    #{$property}: $startSize + px;

    @media (min-width: #{$maxWidthContainer + px}) {
      #{$property}: calc(#{$minSize + px} #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
    }
  } @else {
    // Всегда
    #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
  }
}

@mixin adaptiv-value768-320($property, $startSize, $minSize, $type) {
  $addSize: $startSize - $minSize;

  #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{768 - 320}));
}

@mixin adaptiv-value1024-320($property, $startSize, $minSize, $type) {
  $addSize: $startSize - $minSize;

  #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{1024 - 320}));
}
